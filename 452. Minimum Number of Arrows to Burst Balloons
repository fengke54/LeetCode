class Solution(object):
    def findMinArrowShots(self, points):
        """
        :type points: List[List[int]]
        :rtype: int
        """
        if not points:
            return 0 
        
        # sort by x_end
        points.sort(key = lambda x : x[1])
        
        arrows = 1
        first_end = points[0][1]
        for x_start, x_end in points:
            # if current balloon starts after the end of anohter one, one more arrow is needed
            if first_end < x_start:
                arrows += 1
                first_end = x_end
        
        return arrows 
